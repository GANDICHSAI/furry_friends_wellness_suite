/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views.systemAdmin;

import Models.StoreEmployee;
import Utilities.SystemAdminController;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hanee
 */
public class ManageStoreEmployee extends javax.swing.JPanel {

    /**
     * Creates new form ManageStoreEmployeee
     */
    JPanel bottomPanel;
    private StoreEmployee selectedSE;
    private StoreEmployee editingSE;
    private ArrayList<StoreEmployee> storeEmployees;
    
    public ManageStoreEmployee(JPanel bottomPanel) {
        initComponents();
        this.bottomPanel = bottomPanel;
        populateTable();
        populateStoreDropdown();
        
    }
    
    private void clearFields() {
        
        nameInput.setText("");
        emailInput.setText("");
        passwordInput.setText("");
        idValue.setText("");
        
        selectedSE = null;
        editingSE = null;
    }
    
    public void populateTable() {
        try {
            
            this.storeEmployees = SystemAdminController.getStoreEmployees();
            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
            
            tableModel.setRowCount(0);
            
            for (StoreEmployee se : storeEmployees) {
                String[] seData = {(String) Integer.toString(se.getstoreEmpID()), se.getStoreEmployeeName(), se.getStoreName(), 
                    se.getStoreEmployeeEmail(),se.getStoreEmployeePassword()};
                tableModel.addRow(seData);
            }
            
            clearFields();
            
        } catch (Exception e) {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        table = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        idLabel = new javax.swing.JLabel();
        idValue = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        storeLabel = new javax.swing.JLabel();
        storeDropdown = new javax.swing.JComboBox<>();
        emailLabel = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordInput = new javax.swing.JPasswordField();
        deleteStoreEmpBtn = new javax.swing.JButton();
        editStoreEmpBtn = new javax.swing.JButton();
        saveChangesBtn = new javax.swing.JButton();
        backToMenuBtn = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        heading.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        heading.setForeground(new java.awt.Color(255, 255, 255));
        heading.setText("Manage Store Employee");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Store", "Email", "Password"
            }
        ));
        table.setViewportView(jTable1);

        idLabel.setBackground(new java.awt.Color(255, 255, 255));
        idLabel.setForeground(new java.awt.Color(255, 255, 255));
        idLabel.setText("Employee ID");

        idValue.setBackground(new java.awt.Color(255, 255, 255));
        idValue.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        idValue.setForeground(new java.awt.Color(255, 255, 255));
        idValue.setText("Employee ID");

        nameLabel.setBackground(new java.awt.Color(255, 255, 255));
        nameLabel.setForeground(new java.awt.Color(255, 255, 255));
        nameLabel.setText("Name");

        nameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameInputActionPerformed(evt);
            }
        });
        nameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameInputKeyPressed(evt);
            }
        });

        storeLabel.setBackground(new java.awt.Color(255, 255, 255));
        storeLabel.setForeground(new java.awt.Color(255, 255, 255));
        storeLabel.setText("Store");

        storeDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        storeDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeDropdownActionPerformed(evt);
            }
        });

        emailLabel.setBackground(new java.awt.Color(255, 255, 255));
        emailLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailLabel.setText("Email");

        emailInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailInputActionPerformed(evt);
            }
        });
        emailInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailInputKeyPressed(evt);
            }
        });

        passwordLabel.setBackground(new java.awt.Color(255, 255, 255));
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password");

        deleteStoreEmpBtn.setText("Delete Store Employee");
        deleteStoreEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStoreEmpBtnActionPerformed(evt);
            }
        });

        editStoreEmpBtn.setText("Edit Store Employee");
        editStoreEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStoreEmpBtnActionPerformed(evt);
            }
        });

        saveChangesBtn.setText("Save Changes");
        saveChangesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesBtnActionPerformed(evt);
            }
        });

        backToMenuBtn.setText("Back to admin menu");
        backToMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMenuBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(heading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backToMenuBtn)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(table, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(storeLabel)
                    .addComponent(emailLabel)
                    .addComponent(passwordLabel)
                    .addComponent(idLabel)
                    .addComponent(nameLabel))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(storeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idValue)
                    .addComponent(emailInput)
                    .addComponent(nameInput)
                    .addComponent(passwordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteStoreEmpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveChangesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editStoreEmpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backToMenuBtn)
                    .addComponent(heading))
                .addGap(21, 21, 21)
                .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idValue))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(storeLabel)
                            .addComponent(storeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLabel)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(editStoreEmpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteStoreEmpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveChangesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameInputActionPerformed

    private void emailInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailInputActionPerformed

    private void backToMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMenuBtnActionPerformed
        // TODO add your handling code here:
        
        AdminMenu adminMenuObj = new AdminMenu(bottomPanel);
        bottomPanel.add(adminMenuObj);
        CardLayout layout = (CardLayout) bottomPanel.getLayout();
        layout.next(bottomPanel);
    }//GEN-LAST:event_backToMenuBtnActionPerformed

    private void deleteStoreEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStoreEmpBtnActionPerformed
        // TODO add your handling code here:
        
        try {
            int selectedRowIndex = jTable1.getSelectedRow();
            if (selectedRowIndex < 0) {
                
                throw new IllegalArgumentException("Please select a user to delete!");
                
            } else {
                
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                selectedSE = storeEmployees.get(selectedRowIndex);
                SystemAdminController.deleteSE(selectedSE);
                clearFields();
                populateTable();
                JOptionPane.showMessageDialog(null, "User succesfully deleted!", "Successfully Deleted", JOptionPane.INFORMATION_MESSAGE);
                
            }
            
        } catch (IllegalArgumentException e) {
            
            JOptionPane.showMessageDialog(this, e.getMessage(), "Data Selection Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Data Deletion Error", JOptionPane.ERROR_MESSAGE);
            
        }
        
        
    }//GEN-LAST:event_deleteStoreEmpBtnActionPerformed
     private void populateStoreDropdown() {
    // Clear existing items in the dropdown
        storeDropdown.removeAllItems();

        // Get new store names from the database
        ArrayList<String> storeNames = SystemAdminController.getAllStoreNames();

        // Add the new store names to the dropdown
        for (String name : storeNames) {
            storeDropdown.addItem(name);
    }
}
    private void editStoreEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editStoreEmpBtnActionPerformed
        // TODO add your handling code here:
        
        try {
            int selectedRowIndex = jTable1.getSelectedRow();
            if (selectedRowIndex < 0) {
                throw new IllegalArgumentException("Please select a user you want to edit the data for!");
            } else {
                editingSE = storeEmployees.get(selectedRowIndex);
                idValue.setText((String) Integer.toString(editingSE.getstoreEmpID()));
                System.out.println(editingSE.getStoreID());
                nameInput.setText(editingSE.getStoreEmployeeName());
                emailInput.setText(editingSE.getStoreEmployeeEmail());
                passwordInput.setText(editingSE.getStoreEmployeePassword());
            }
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Selection Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editStoreEmpBtnActionPerformed

    private void saveChangesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesBtnActionPerformed
        // TODO add your handling code here:
        
        try {
            
            char[] password = passwordInput.getPassword();
                
            String passwordString = new String(password);
                
            if (editingSE == null) {
                 throw new IllegalArgumentException("no-select");
            }
            
            if(nameInput.getText().isEmpty()||nameInput.getText()==null||emailInput.getText() == null|emailInput.getText().isEmpty()||storeDropdown.getSelectedItem().toString().isEmpty()||passwordString.isEmpty()){
                throw new IllegalArgumentException("no-data");
            }else {
 
                
                StoreEmployee newSE = new StoreEmployee();
                
                newSE.setStoreEmployeeName(nameInput.getText());
                newSE.setStoreEmployeeEmail(emailInput.getText());
                newSE.setStoreID(SystemAdminController.getStoreIdByName((String) storeDropdown.getSelectedItem()));
   
                
                
                
                newSE.setstoreEmployeePassword(passwordString);
                
                
                if (editingSE.getStoreEmployeeName().equals(newSE.getStoreEmployeeName()) && 
                        editingSE.getStoreEmployeeEmail().equals(newSE.getStoreEmployeeEmail())&&
                        editingSE.getStoreEmployeePassword().equals(newSE.getStoreEmployeePassword())&&
                        editingSE.getStoreID() == (newSE.getStoreID())) {
                   
                    throw new IllegalArgumentException("no-edit");
                } else {
                    SystemAdminController.editStoreEmployee(editingSE, newSE);
                    clearFields();
                    populateTable();
                    JOptionPane.showMessageDialog(null, "User succesfully updated!", "Successfully Updated", JOptionPane.INFORMATION_MESSAGE);
                }
                
            }
        } catch (IllegalArgumentException e) {
            if (e.getMessage().equals("no-edit")) {
                JOptionPane.showMessageDialog(this, "Please make some changes to the user you have selected!", "Data Updation Error", JOptionPane.ERROR_MESSAGE);
            }
            
            if (e.getMessage().equals("no-select")) {
                JOptionPane.showMessageDialog(this, "Please make some you selected a user to edit!", "Data Updation Error", JOptionPane.ERROR_MESSAGE);
            }
            
            if(e.getMessage().equals("no-data")){
                JOptionPane.showMessageDialog(this,"Please fill out new store employee details","Data Updation Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveChangesBtnActionPerformed

    private void storeDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_storeDropdownActionPerformed

    private void nameInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameInputKeyPressed
        // TODO add your handling code here:
        
        try{
             
             if (nameInput.getText().matches("^[a-zA-Z ]+$")){
                 
                 nameInput.setForeground(Color.black);

            }
            
            else{
                throw new Exception();
            }
                        
        }
        catch(Exception e){
            
            nameInput.setForeground(Color.red);

        }
    }//GEN-LAST:event_nameInputKeyPressed

    private void emailInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailInputKeyPressed
        // TODO add your handling code here:
        
        try{
             
             if (emailInput.getText().matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")){
                 
                 emailInput.setForeground(Color.black);

            }
            
            else{
                throw new Exception();
            }
                        
        }
        catch(Exception e){
            
            emailInput.setForeground(Color.red);

        }
    }//GEN-LAST:event_emailInputKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToMenuBtn;
    private javax.swing.JButton deleteStoreEmpBtn;
    private javax.swing.JButton editStoreEmpBtn;
    private javax.swing.JTextField emailInput;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel heading;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idValue;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton saveChangesBtn;
    private javax.swing.JComboBox<String> storeDropdown;
    private javax.swing.JLabel storeLabel;
    private javax.swing.JScrollPane table;
    // End of variables declaration//GEN-END:variables
}
